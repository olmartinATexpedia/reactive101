buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://gpsrepository.karmalab.net:8082/nexus/content/groups/public/" }
        maven { url "http://nexus.sb.karmalab.net/nexus/content/repositories/gps-releases/" }
        maven { url "http://nexus.sb.karmalab.net/nexus/content/repositories/gps-snapshots/" }
    }
}
plugins {
    id "com.github.maiflai.scalatest" version "0.9"
}

apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: "com.github.maiflai.scalatest"
apply plugin: 'maven-publish'

group = 'com.expedia.gps'
version = '0.1.0-SNAPSHOT'

allprojects {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

ext {
    scalaVersion = '2.11.7'
    scalaLangVersion = scalaVersion.substring(0, scalaVersion.lastIndexOf('.'))
    scalaLoggingVersion = "3.1.0"

    sprayVersion = '1.3.3'
    logbackVersion = '1.1.3'
    json4sVersion = '3.3.0'
    akkaVersion = '2.3.9'
    slickVersion = '3.0.0'
    slickPgVersion = '0.9.1'
    postgresqlVersion = '9.4-1201-jdbc41'
    posgisVersion = '1.3.3'
    hikariCPVersion = '2.3.9'
    geotoolsVersion = '13.1'
    jtsVersion = '1.13'
    scalatraVersion = '2.3.0'
    jettyVersion = '9.2.10.v20150310'
    apacheHttpClientVersion = '4.5.1'
    dispatchVersion = '0.11.3'
    reactorVersion = '2.0.7.RELEASE'

    scalaTestVersion = '2.2.4'
    pegDownVersion = '1.1.0'
}

dependencies {
    compile "org.scala-lang:scala-library:$scalaVersion"
    
    compile "com.typesafe.scala-logging:scala-logging_$scalaLangVersion:$scalaLoggingVersion"
    compile "com.typesafe.akka:akka-actor_$scalaLangVersion:$akkaVersion"
    compile "com.typesafe.akka:akka-slf4j_$scalaLangVersion:$akkaVersion"
    
    compile "ch.qos.logback:logback-classic:$logbackVersion"
    
    compile "org.json4s:json4s-jackson_$scalaLangVersion:$json4sVersion"
    
    compile "com.typesafe.slick:slick_$scalaLangVersion:$slickVersion"
    compile "org.postgresql:postgresql:$postgresqlVersion"
    compile ("org.postgis:postgis-jdbc:$posgisVersion") {
        exclude group: "postgresql", module: "postgresql"
    }
    compile "com.zaxxer:HikariCP:$hikariCPVersion"

    compile "org.geotools:gt-geometry:$geotoolsVersion"

    compile "io.spray:spray-client_$scalaLangVersion:$sprayVersion"
    compile "io.spray:spray-can_$scalaLangVersion:$sprayVersion"
    compile "io.spray:spray-http_$scalaLangVersion:$sprayVersion"
    compile "io.spray:spray-httpx_$scalaLangVersion:$sprayVersion"
    compile "io.spray:spray-util_$scalaLangVersion:$sprayVersion"

    compile "org.scalatra:scalatra_$scalaLangVersion:$scalatraVersion"
    compile "org.scalatra:scalatra-json_$scalaLangVersion:$scalatraVersion"
    compile "org.eclipse.jetty:jetty-webapp:$jettyVersion"

    compile "org.apache.httpcomponents:httpclient:$apacheHttpClientVersion"
    compile "org.projectlombok:lombok:1.16.6"
    compile 'commons-io:commons-io:2.4'
    compile 'com.ning:async-http-client:1.9.31'
    compile 'io.netty:netty:3.10.5.Final'

    compile 'io.dropwizard.metrics:metrics-core:3.1.0'
    compile 'io.reactivex:rxjava:1.0.16'
    compile "net.databinder.dispatch:dispatch-core_$scalaLangVersion:$dispatchVersion"

    compile "io.projectreactor:reactor-core:$reactorVersion"
    compile "io.projectreactor:reactor-stream:$reactorVersion"
    compile "io.projectreactor:reactor-net:$reactorVersion"
    compile 'io.netty:netty-all:4.0.33.Final'



    testCompile "org.scalatest:scalatest_$scalaLangVersion:$scalaTestVersion"
    testRuntime "org.pegdown:pegdown:$pegDownVersion"
}

tasks.withType(ScalaCompile) {
    // activate incremental compilation
    scalaCompileOptions.useAnt = false
    scalaCompileOptions.additionalParameters = ["-language:postfixOps", "-feature"]//, "-Ylog-classpath"]
    scalaCompileOptions.useCompileDaemon = true
    scalaCompileOptions.daemonServer = "localhost:4243"
}

test {
    maxParallelForks = 1
    ignoreFailures = true
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'gaia-rt-utilities'
            from components.java
            artifact sourceJar {
                classifier "sources"
            }
        }
    }
}

configurations {
    deployerJars
}

repositories {
    mavenLocal()
    maven { url "http://maven.geotoolkit.org" }
    mavenCentral()
    maven { url "http://download.java.net/maven/2" }
    maven { url "http://download.osgeo.org/webdav/geotools/" }
}

idea {
    module {
        name = "Reactive101"
        downloadJavadoc = false
        downloadSources = true
    }
}
